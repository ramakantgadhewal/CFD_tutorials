/*---------------------------------------------------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  1.4                                   |
|   \\  /    A nd           | Web:      http://www.openfoam.org               |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/

FoamFile
{
    version         0.283;
    format          ascii;

    root            "";
    case            "";
    instance        "";
    local           "";

    class           dictionary;
    object          blockMeshDict;
}

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

vertices        
(
    (-3.14159 0.0 -3.14159)  //0
    ( 3.14159 0.0 -3.14159)  //1
    ( 3.14159 6.28318 -3.14159)  //2
    (-3.14159 6.28318 -3.14159)  //3

    (-3.14159 0.0 3.14159)  //4
    ( 3.14159 0.0 3.14159)  //5
    ( 3.14159 6.28318 3.14159)  //6
    (-3.14159 6.28318 3.14159)  //7
 );

blocks          
(
    hex (0 1 2 3 4 5 6 7) (64 64 64) simpleGrading (1 1 1)
);

edges           
(

);

boundary
(
    patch0_half0
    {
        type cyclic;
        neighbourPatch patch0_half1;
        faces
        (
            (0 3 2 1)
        );
    }
    patch0_half1
    {
        type cyclic;
        neighbourPatch patch0_half0;
        faces
        (
            (4 5 6 7)
        );
    }
    patch1_half0
    {
        type cyclic;
        neighbourPatch patch1_half1;
        faces
        (
            (0 4 7 3)
        );
    }
    patch1_half1
    {
        type cyclic;
        neighbourPatch patch1_half0;
        faces
        (
            (2 6 5 1)
        );
    }
    patch2_half0
    {
        type cyclic;
        neighbourPatch patch2_half1;
        faces
        (
            (3 7 6 2)
        );
    }
    patch2_half1
    {
        type cyclic;
        neighbourPatch patch2_half0;
        faces
        (
            (1 5 4 0)
        );
    }
);

mergePatchPairs
(  
    
);

// ************************************************************************* //
